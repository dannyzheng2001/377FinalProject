/*css files*/* {
  box-sizing: border-box;
}

/* 
  These rules apply to actual HTML elements with no labelling!
  So: they style the tags directly
*/

html {
  background-color: #ffffff;
  font-size: 16px;
  min-width: 300px;
  overflow-x: hidden;
  overflow-y: scroll;

  /* these are specific to different browsers */
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  text-rendering: optimizeLegibility;
  -webkit-text-size-adjust: 100%;
  -moz-text-size-adjust: 100%;
  text-size-adjust: 100%;
}

body {
  margin: 0;
  padding: 0;

  font-family: ‘Segoe UI’, Candara, ‘Bitstream Vera Sans’, ‘DejaVu Sans’, ‘Bitsream Vera Sans’, ‘Trebuchet MS’, Verdana, ‘Verdana Ref’, sans-serif;
  font-weight: 400;
  line-height: 1.5;
  background-color: rgb(239, 239, 239);
}


a {
  display: inline-block;
  text-decoration: none;
}

h2, h3 {
  margin:0;
  padding:0;
  padding-bottom:1.5rem;
}

form {
  accent-color: hsla(120, 100%, 50%, 0.482);
}

/*
  - These styles use 'class names'
  - You can apply them by using the 'class' attribute on your HTML
  - like this: <div class="wrapper">
  - note that the period vanishes there!
*/



.container {
  margin: 0 20px;
  display: flex;
  justify-content: space-evenly;
  align-items: start;
}

.header {
  padding-top: 1rem;
  padding-left: 1rem;
  padding-right: 1rem;
  padding-bottom: 1.5rem;
}


/*
  This rule implies that the H1 tag lives within another HTML tag
  It "inherits" some rules from the above
  Those rules won't apply to an h1 that's outside a block with the class of 'header'
*/

.header h1 {
  display: block;
  /* this will push other blocks out of the way */

  /* colors */
  background-color: rgba(139, 2, 0, 0.8);
  color: #000000;

  /* shapes */
  border-radius: 6px;
  font-size: 1.5rem;
  padding: 1.25rem;
  margin:0; /* removing the margin on h1 tags means the header pins to the top if we move */


  /* box-shadows are fancy */
  box-shadow: 0 0.5em 1em -0.125em rgb(10 10 10 / 10%), 0 0 0 1px rgb(10 10 10 / 2%);
}


/*
  Rules can be combined on a block to apply the 'cascade' in order
  So you can use two classnames in a single class attribute
  like: <div class="box section">
  Rules may combine in unexpected ways - remember that the LAST thing written in this file will have "priority"
  And will be what displays in your client
*/
  .headerbox {
    border: 4px dashed;
    border-radius: 4px;
  
    height:fit-content;
    padding: 1.5rem;
    margin: 0 auto;
  }

.box {
  background-color: rgba(238, 0, 255, 0.4);
  border: 2px dashed;
  border-radius: 4px;

  width: auto;
  height:fit-content;
  padding: 1.5rem;
  margin: 0 auto;
}

.left_section {
  background: rgb(196, 44, 44); font-size: 20px; float: left; width: 45%; height: 75%; margin-left: 2.5em;
}

.right_section {
  background: rgb(31, 91, 202); font-size: 20px; float: right; width: 45%; height: 75%; margin-right: 2.5em;
}

/* How To Write A Media Query For Small Screens */

@media only screen and (max-width: 736px){
  /* Rules in here will only apply when a screen is the correct size */
  /* check it out by using your developer tools to shrink your screen-size */
  .container {
    background-color: rgba(255, 0, 0, 0.65);
    flex-direction: column;
    justify-content: center;
    align-items: center;
  }
.right_section{
  align-items: flex-start;
}
}